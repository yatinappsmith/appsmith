name: Generate Jest Tests - New
on:
  workflow_dispatch:

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}  # Reference the secret containing your API key

defaults:
  run:
    shell: bash

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: "Start of workflow"
        run: |
          echo "Starting the workflow"
      
      - name: "Checkout code"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Install Jest
        run: yarn add --dev jest

      - name: Install jq
        run: sudo apt-get install jq 

      - name: Install OpenAI package
        run: pip install openai

      - name: Get changed files in the client folder
        id: changed-files-specific
        uses: tj-actions/changed-files@v41
        with:
          files: "app/client/**"
          base_sha: "release"
      
      - name: Install jest-gen-test
        run: yarn add jest-test-gen
      
      - name: Generate Tests
        id: generate-tests
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files-specific.outputs.all_changed_files }}
          GENERATED_TEST_FILES: ""
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            testfile=$(echo "$file" | sed 's/.ts/.generated.test.ts/g')
            yarn run jest-test-gen "$file"
            GENERATED_TEST_FILES="$GENERATED_TEST_FILES $testfile"
          done
          echo "::set-output name=generated_test_files::$GENERATED_TEST_FILES"

      # - name: Run Generated Jest Tests
      #   id: run-jest-tests
      #   if: steps.generate-tests.outputs.generated_test_files != ''
      #   run: |
      #     failed_tests=""
      #     for testfile in ${{ steps.generate-tests.outputs.generated_test_files }}; do
      #       if ! yarn jest "$testfile"; then
      #         failed_tests="$failed_tests $testfile"
      #       fi
      #     done
      #     echo "::set-output name=failed_tests::$failed_tests"
      
      - name: Fix Failed Tests using Codex
        if: steps.generate-tests.outputs.generated_test_files != ''
        run: |
          fixed_tests=""
          for testfile in ${{ steps.generate-tests.outputs.generated_test_files }}; do
            # Construct Codex API request and handle response
            response=$(curl -X POST \
              -H "Authorization: Bearer $OPENAI_API_KEY" \
              -H "Content-Type: application/json" \
              -d '{
                "model": "text-davinci-003",
                "prompt": "Generate missing tests or fix failing tests in '"$testfile"':",
                "max_tokens": 150
              }' \
              https://api.openai.com/v1/engines/davinci-codex/completions)
            
            echo "Response gotten from $response" #check response gotten from codex
            fixed_code=$(echo "$response" | jq -r '.choices[0].text')

            # Ensure fixed_code is not empty
            if [ -z "$fixed_code" ]; then
              echo "Codex did not provide any fixed code for $testfile"
              continue  # Skip updating the file if no fixed code is provided
            fi

            echo "Fixed Code for $testfile: $fixed_code"  # Debug output

            # Update the test file with fixed_code
            echo "$fixed_code" > "$testfile"
            fixed_tests="$fixed_tests $testfile"
          done
          echo "::set-output name=fixed_tests::$fixed_tests"

      # - name: Run Fixed Jest Tests
        # if: steps.fix-failed-tests.outputs.fixed_tests != ''
        # run: |
        #   for testfile in ${{ steps.fix-failed-tests.outputs.fixed_tests }}; do
        #     yarn jest "$testfile"
        #   done

      - name: Commit generated test files
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          git config --global user.email "yatin@appsmith.com"
          git config --global user.name "github-actions[bot]"
          git add .
          git reset -- package.json
          git reset -- yarn.lock
          git commit -m "chore: generate and fix tests for changed files"
          git push
